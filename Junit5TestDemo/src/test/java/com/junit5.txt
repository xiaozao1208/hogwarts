JUnit5框架组成
    JUnit5包含 JUnit Platform,JUnit Jupiter,JUnit Vintage
    JUnit Platform:这是JUnit向测试平台演进，提供平台功能的模块。
        通过JUnit Platform，其他的自动化测试引擎或开发人员自己定制的引擎都可以接入Junit实现对接和执行。

    JUnit Jupiter：Junit5的核心，既承载了Junit4原有功能的演讲，同时包含了很多丰富的新特性使得Junit自动
        化测试更丰富和强大。
        Jupiter中的新特性是本节课重点；
        Jupiter本身也是一个基于Junit Platform的引擎实现。

    JUnit Vintage
        对junit3和junit4版本的兼容的测试引擎


JUnit5新特性
    嵌套单元测试 -suite
    Lambda支持  -jdk1.8支持 断言处支持
    参数化测试
    重复测试
    动态测试


JUnit5注解
    1.依赖导入 pom.xml中的<dependencies>中添加
        <!--junit5的核心依赖-->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.3.2</version>
        </dependency>

        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <version>1.3.2</version>
        </dependency>
    2.注解
    @Test
    @BeforeAll  static
    @AfterAll   static
    @BeforeEach
    @AfterEach
    @Nested      内嵌测试执行顺序倒序
    @Disabled    类似 Ignore
    @DisplayName 测试展示处的名称
    @ParameterizedTest
    @RepeatedTest 重复执行次数

JUnit5执行过程

套件测试
    junit5套件执行
        @RunWith(JUnitPlatform.class)
        @SelectPackages({"com.packageA","com.packageB"})
        @IncludePackages("包名")

    实际：
    @RunWith(JUnitPlatform.class)
    @SelectPackages({
            "com.testcaseinfo"
    })
    @IncludePackages({
            "com.testcaseinfo.testcase",
            "com.testcaseinfo.testcase2"
    })
    public class Junit5SuiteDemo1Test {
    }


        @RunWith(JUnitPlatform.class)
        @SelectClasses({A.class,B.class,C.class})
        @IncludeTags("production")
        @ExcludeTags("Prod")

    实际：
    @RunWith(JUnitPlatform.class)
    @SelectClasses({
            Junit5Demo2Test.class
    })
    @IncludeTags({
            "testdemo"
    })
    public class Junit5SuiteDemo2Test {

    }